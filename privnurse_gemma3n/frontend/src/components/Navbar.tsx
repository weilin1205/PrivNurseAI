// components/Navbar.tsx
'use client'

import Link from 'next/link';
import { Button, IconButton } from '@chakra-ui/react';
import { ChevronDownIcon } from '@chakra-ui/icons';
import { useRouter, usePathname } from 'next/navigation';
import { FC, useState, ReactNode } from 'react';
import { HamburgerIcon, CloseIcon } from '@chakra-ui/icons';
import { useNavbar } from '@/contexts/NavbarContext';
import { useAuth } from '@/contexts/AuthContext';

const nullbot_branding: ReactNode = (
    <div className="w-full flex items-center justify-center">
        <svg
            width="100%"
            height="100%"
            // viewBox="0 0 387.201 79.6"
            viewBox="0 0 432 78"
            xmlns="http://www.w3.org/2000/svg"
            className="dark:invert select-none mb-2 cursor-pointer"
            preserveAspectRatio="xMidYMid meet"
            style={{ userSelect: 'none', WebkitUserSelect: 'none', MozUserSelect: 'none', msUserSelect: 'none' }}
        >
            {/* <g id="svgGroup" strokeLinecap="round" fillRule="evenodd" fontSize="9pt" stroke="#000" strokeWidth="0.25mm" fill="#000" style={{ stroke: '#000', strokeWidth: '0.25mm', fill: '#000' }}>
                <path d="M 115.701 7.1 L 115.601 53.3 L 115.501 70.9 L 113.601 70.9 L 73.201 11.4 L 72.801 11.4 L 72.701 51 L 72.701 70.9 L 70.701 70.9 L 70.701 51.9 L 70.801 7.2 L 72.701 7.2 L 113.101 66.7 L 113.501 66.7 L 113.701 7.3 L 115.701 7.1 Z M 171.901 21.8 L 171.901 53.3 Q 172.101 61.8 167.301 66.5 A 15.638 15.638 0 0 1 160.442 70.356 Q 157.995 71.042 155.074 71.17 A 31.223 31.223 0 0 1 153.701 71.2 A 27.193 27.193 0 0 1 148.435 70.723 Q 145.393 70.122 143.043 68.763 A 13.919 13.919 0 0 1 140.151 66.55 Q 135.599 61.998 135.599 53.66 A 30.994 30.994 0 0 1 135.601 53.3 L 135.701 46.1 L 135.701 21.8 L 137.801 21.8 L 137.601 53.2 A 28.473 28.473 0 0 0 137.599 53.565 Q 137.599 59.338 139.979 63.067 A 12.283 12.283 0 0 0 141.651 65.15 Q 145.331 68.83 151.959 69.247 A 27.756 27.756 0 0 0 153.701 69.3 Q 159.42 69.3 163.173 67.125 A 12.459 12.459 0 0 0 165.751 65.15 Q 169.504 61.397 169.863 54.66 A 27.424 27.424 0 0 0 169.901 53.2 L 169.901 21.8 L 171.901 21.8 Z M 13.401 68.6 L 8.301 79.6 L 6.701 79.3 L 6.501 78.9 L 11.701 67.6 A 22.544 22.544 0 0 1 4.67 59.988 A 29.092 29.092 0 0 1 3.001 56.6 A 36.507 36.507 0 0 1 0.848 49.191 Q 0.001 44.619 0.001 39.2 Q 0.001 23.5 7.001 15.1 Q 14.001 6.7 27.001 6.7 A 32.245 32.245 0 0 1 33.224 7.275 A 24.998 24.998 0 0 1 38.701 9 L 42.901 0 L 44.501 0.3 L 44.701 0.8 L 40.501 9.9 Q 46.701 13.4 49.901 20.55 A 34.277 34.277 0 0 1 52.198 27.945 Q 52.875 31.382 53.044 35.32 A 62.39 62.39 0 0 1 53.101 38 A 59.62 59.62 0 0 1 52.417 47.335 Q 50.913 56.803 46.101 62.75 A 22.716 22.716 0 0 1 31.806 70.925 A 33.909 33.909 0 0 1 26.001 71.4 Q 18.801 71.4 13.401 68.6 Z M 387.001 21.8 L 387.201 22.2 L 386.901 23.8 L 378.601 23.7 L 371.001 23.7 L 371.001 70.9 L 369.001 70.9 L 369.001 23.7 L 361.601 23.7 L 353.001 23.8 L 352.701 23.4 L 353.001 21.8 L 387.001 21.8 Z M 332.753 22.122 A 27.14 27.14 0 0 0 326.301 21.4 A 28.721 28.721 0 0 0 319.686 22.117 A 18.6 18.6 0 0 0 309.751 27.9 Q 305.843 32.318 304.591 39.323 A 40.856 40.856 0 0 0 304.001 46.5 A 45.445 45.445 0 0 0 304.16 50.371 Q 304.485 54.174 305.476 57.323 A 21.087 21.087 0 0 0 309.551 64.85 A 17.798 17.798 0 0 0 318.881 70.538 A 26.275 26.275 0 0 0 325.401 71.3 A 28.391 28.391 0 0 0 331.05 70.766 A 18.856 18.856 0 0 0 341.901 64.6 A 20.487 20.487 0 0 0 344.837 60.111 Q 346.396 56.902 347.106 52.859 A 42.59 42.59 0 0 0 347.701 45.5 A 43.537 43.537 0 0 0 347.565 42.006 Q 346.834 32.923 342.151 27.65 A 17.915 17.915 0 0 0 332.753 22.122 Z M 264.601 70.9 L 264.601 21.8 L 275.101 21.7 A 23.003 23.003 0 0 1 279.006 22.01 Q 282.752 22.656 285.151 24.65 A 9.572 9.572 0 0 1 288.465 30.434 A 14.353 14.353 0 0 1 288.701 33.1 A 15.638 15.638 0 0 1 288.009 37.91 Q 286.363 43.017 280.801 45.2 A 20.745 20.745 0 0 1 284.583 46.084 Q 287.558 47.102 289.551 49 A 9.867 9.867 0 0 1 292.393 54.212 A 14.69 14.69 0 0 1 292.701 57.3 A 14.162 14.162 0 0 1 292.012 61.828 A 11.439 11.439 0 0 1 287.801 67.5 Q 282.901 71.1 273.801 71.1 Q 267.736 71.1 264.822 70.915 A 41.569 41.569 0 0 1 264.601 70.9 Z M 39.601 11.8 L 14.301 66.7 A 22.174 22.174 0 0 0 21.405 69.051 A 29.191 29.191 0 0 0 26.001 69.4 A 28.651 28.651 0 0 0 33.817 68.393 A 20.643 20.643 0 0 0 44.601 61.25 Q 49.768 54.771 50.828 43.901 A 60.882 60.882 0 0 0 51.101 38 A 52.039 52.039 0 0 0 50.633 30.818 Q 50.104 27.027 48.977 23.834 A 28.563 28.563 0 0 0 48.151 21.75 A 23.47 23.47 0 0 0 44.605 16.015 A 19.58 19.58 0 0 0 39.601 11.8 Z M 12.601 65.7 L 37.901 10.9 Q 33.675 8.834 27.775 8.708 A 36.24 36.24 0 0 0 27.001 8.7 A 29.574 29.574 0 0 0 19.35 9.633 A 20.549 20.549 0 0 0 8.451 16.6 A 25.881 25.881 0 0 0 3.93 25.156 Q 2.724 28.909 2.272 33.457 A 58.112 58.112 0 0 0 2.001 39.2 A 56.065 56.065 0 0 0 2.447 46.465 Q 2.935 50.198 3.959 53.386 A 31.472 31.472 0 0 0 4.701 55.45 A 25.068 25.068 0 0 0 7.661 60.9 A 19.624 19.624 0 0 0 12.601 65.7 Z M 214.801 69 L 215.001 69.3 L 214.701 70.9 L 191.501 70.9 L 191.501 21.8 L 193.501 21.8 L 193.501 69 L 214.801 69 Z M 251.301 69 L 251.501 69.3 L 251.201 70.9 L 228.001 70.9 L 228.001 21.8 L 230.001 21.8 L 230.001 69 L 251.301 69 Z M 326.201 23.4 A 26.022 26.022 0 0 0 320.27 24.035 Q 315.753 25.092 312.622 27.907 A 16.166 16.166 0 0 0 311.251 29.3 A 19.005 19.005 0 0 0 307.554 35.996 Q 306.101 40.45 306.101 46.4 A 40.2 40.2 0 0 0 306.589 52.882 Q 307.151 56.317 308.361 59.065 A 18.07 18.07 0 0 0 311.101 63.5 A 16.231 16.231 0 0 0 320.636 68.959 A 24.451 24.451 0 0 0 325.401 69.4 A 25.13 25.13 0 0 0 331.569 68.687 A 16.849 16.849 0 0 0 340.451 63.3 A 19.75 19.75 0 0 0 344.219 56.395 Q 345.701 51.809 345.701 45.7 A 37.152 37.152 0 0 0 345.208 39.443 Q 344.617 35.988 343.317 33.242 A 17.518 17.518 0 0 0 340.651 29.15 A 16.374 16.374 0 0 0 331.651 23.962 A 24.977 24.977 0 0 0 326.201 23.4 Z M 277.901 46.4 L 266.601 46.5 L 266.601 69 A 73.929 73.929 0 0 0 271.72 69.281 A 83.742 83.742 0 0 0 273.501 69.3 A 34.389 34.389 0 0 0 278.26 68.992 Q 280.676 68.654 282.648 67.943 A 14.573 14.573 0 0 0 286.151 66.15 A 10.013 10.013 0 0 0 290.508 58.894 A 13.308 13.308 0 0 0 290.601 57.3 A 11.41 11.41 0 0 0 290.115 53.887 A 8.951 8.951 0 0 0 287.351 49.7 A 11.824 11.824 0 0 0 283.943 47.69 Q 281.388 46.681 277.901 46.4 Z M 275.401 23.6 L 266.601 23.6 L 266.601 44.4 L 277.201 44.6 A 13.729 13.729 0 0 0 280.396 43.647 A 9.869 9.869 0 0 0 284.101 40.85 A 10.387 10.387 0 0 0 286.163 36.479 A 15.082 15.082 0 0 0 286.501 33.2 A 10.422 10.422 0 0 0 286.043 30.037 A 8.324 8.324 0 0 0 283.501 26.2 A 10.173 10.173 0 0 0 279.33 24.063 Q 277.802 23.665 275.999 23.609 A 19.291 19.291 0 0 0 275.401 23.6 Z" vectorEffect="non-scaling-stroke"/>
            </g> */}
            <g id="svgGroup" strokeLinecap="round" fillRule="evenodd" fontSize="9pt" stroke="#000000" strokeWidth="0.25mm" fill="#000000" style={{ stroke: '#000', strokeWidth: '0.25mm', fill: '#000' }}>
                <path d="M 179.5 74 L 176 74 L 176 0 L 179.6 0 L 226.2 68.1 L 226.2 0 L 229.7 0 L 229.7 74 L 226.1 74 L 179.5 5.8 L 179.5 74 Z M 333.4 58.7 L 337.1 58.7 L 337.25 60 Q 337.351 60.874 337.7 62.018 A 21.998 21.998 0 0 0 338.1 63.2 Q 338.756 64.982 340.247 66.807 A 18.389 18.389 0 0 0 340.45 67.05 Q 341.971 68.848 344.639 70.093 A 18.218 18.218 0 0 0 345.1 70.3 A 13.949 13.949 0 0 0 347.776 71.13 Q 349.104 71.409 350.661 71.523 A 30.842 30.842 0 0 0 352.9 71.6 A 17.277 17.277 0 0 0 357.36 71.052 A 13.113 13.113 0 0 0 362.5 68.4 A 10.697 10.697 0 0 0 365.29 64.902 A 10.368 10.368 0 0 0 366.3 60.3 Q 366.3 55.3 363.1 52.75 A 17.143 17.143 0 0 0 358.384 50.119 A 22.345 22.345 0 0 0 355.2 49.2 L 348.6 47.7 A 27.815 27.815 0 0 1 343.936 46.174 Q 341.287 45.024 339.267 43.373 A 17.223 17.223 0 0 1 339 43.15 A 10.236 10.236 0 0 1 335.561 37.095 A 15.277 15.277 0 0 1 335.3 34.2 A 14.424 14.424 0 0 1 336.119 29.245 A 12.549 12.549 0 0 1 339.9 23.9 Q 344.5 20 351.5 20 Q 356.4 20 359.6 21.55 A 17.749 17.749 0 0 1 362.127 23.028 Q 363.493 23.995 364.469 25.144 A 10.889 10.889 0 0 1 364.6 25.3 A 18.129 18.129 0 0 1 366.224 27.617 A 14.073 14.073 0 0 1 367.25 29.75 Q 367.839 31.308 368.115 32.531 A 11.013 11.013 0 0 1 368.3 33.55 L 368.5 35.1 L 365 35.1 L 364.7 33.35 A 10.154 10.154 0 0 0 364.348 31.954 Q 363.95 30.719 363.2 29.25 A 9.39 9.39 0 0 0 361.294 26.734 A 13.217 13.217 0 0 0 359.25 25.15 A 9.721 9.721 0 0 0 356.758 24.05 Q 355.549 23.695 354.09 23.534 A 23.658 23.658 0 0 0 351.5 23.4 A 19.587 19.587 0 0 0 347.913 23.708 Q 344.284 24.385 342.05 26.55 A 10.655 10.655 0 0 0 339.538 30.191 A 10.269 10.269 0 0 0 338.8 34.1 A 10.068 10.068 0 0 0 339.158 36.86 A 7.317 7.317 0 0 0 341.6 40.6 Q 343.883 42.476 347.563 43.62 A 29.435 29.435 0 0 0 349.3 44.1 L 355.9 45.7 A 29.216 29.216 0 0 1 360.374 47.115 Q 363.994 48.612 366.3 50.95 Q 369.9 54.6 369.9 60.3 Q 369.9 64.3 367.75 67.65 A 15.217 15.217 0 0 1 362.612 72.547 A 18.216 18.216 0 0 1 361.8 73 A 17.097 17.097 0 0 1 356.542 74.719 A 22.683 22.683 0 0 1 352.9 75 A 33.756 33.756 0 0 1 349.161 74.806 Q 347.234 74.59 345.61 74.138 A 15.902 15.902 0 0 1 343.4 73.35 A 19.908 19.908 0 0 1 340.516 71.785 Q 338.798 70.648 337.6 69.25 A 19.142 19.142 0 0 1 336.002 67.116 Q 335.237 65.921 334.776 64.738 A 11.383 11.383 0 0 1 334.65 64.4 Q 334.061 62.739 333.785 61.437 A 12.438 12.438 0 0 1 333.6 60.35 L 333.4 58.7 Z M 247.2 54.1 L 247.2 21 L 250.6 21 L 250.6 54.1 A 31.831 31.831 0 0 0 250.956 59.027 Q 251.741 64.022 254.25 67.15 A 11.881 11.881 0 0 0 262.195 71.541 A 17.441 17.441 0 0 0 264.6 71.7 A 18.739 18.739 0 0 0 268.392 71.336 A 13.509 13.509 0 0 0 272.75 69.65 Q 276.1 67.6 278.15 64.2 A 25.239 25.239 0 0 0 280.929 57.549 A 28.712 28.712 0 0 0 281.15 56.65 Q 282.1 52.5 282.1 48.2 L 282.1 21 L 285.5 21 L 285.5 74 L 282.1 74 L 282.1 63 L 281.7 63 A 17.337 17.337 0 0 1 281.02 64.476 Q 280.247 65.98 279 67.85 A 15.291 15.291 0 0 1 276.18 70.988 A 20.411 20.411 0 0 1 273.6 72.85 A 13.56 13.56 0 0 1 269.74 74.429 Q 268.016 74.856 265.995 74.964 A 26.22 26.22 0 0 1 264.6 75 Q 256.5 75 251.85 69.45 A 18.618 18.618 0 0 1 248.291 62.597 Q 247.2 58.847 247.2 54.1 Z M 427.4 47 L 427.4 48 L 385.6 48 A 29.068 29.068 0 0 0 387.065 57.295 A 27.172 27.172 0 0 0 388 59.7 A 21.171 21.171 0 0 0 392.809 66.591 A 20.32 20.32 0 0 0 394.95 68.35 A 17.39 17.39 0 0 0 403.127 71.445 A 22.394 22.394 0 0 0 405.8 71.6 Q 409.947 71.6 412.931 70.437 A 12.576 12.576 0 0 0 414.5 69.7 A 19.907 19.907 0 0 0 417.178 67.923 Q 418.602 66.792 419.601 65.497 A 12.171 12.171 0 0 0 419.75 65.3 A 30.217 30.217 0 0 0 420.892 63.653 Q 421.405 62.853 421.784 62.126 A 12.874 12.874 0 0 0 422.35 60.9 L 423.1 59 L 426.6 59 L 426.1 60.6 Q 425.622 62.13 424.414 64.389 A 45.005 45.005 0 0 1 424.3 64.6 Q 423.02 66.963 420.723 69.325 A 29.917 29.917 0 0 1 420.65 69.4 A 17.382 17.382 0 0 1 417.224 72.088 A 22.387 22.387 0 0 1 414.7 73.4 A 17.173 17.173 0 0 1 411.088 74.522 Q 409.333 74.873 407.304 74.967 A 32.74 32.74 0 0 1 405.8 75 Q 399.6 75 395.05 72.6 Q 390.5 70.2 387.6 66.2 Q 384.7 62.2 383.3 57.3 Q 381.9 52.4 381.9 47.5 Q 381.9 42.5 383.3 37.6 Q 384.7 32.7 387.65 28.7 Q 390.6 24.7 395 22.35 A 19.53 19.53 0 0 1 400.957 20.359 A 26.383 26.383 0 0 1 405.4 20 Q 411.8 20 416.75 23.05 A 19.566 19.566 0 0 1 422.888 29.121 A 25.238 25.238 0 0 1 424.55 32.1 A 27.411 27.411 0 0 1 426.59 38.334 Q 427.197 41.275 427.349 44.679 A 52.08 52.08 0 0 1 427.4 47 Z M 385.7 44.8 L 423.7 44.8 A 43.128 43.128 0 0 0 423.25 39.856 Q 422.53 35.175 420.75 32.05 Q 418.1 27.4 414.1 25.45 A 19.52 19.52 0 0 0 405.693 23.502 A 22.499 22.499 0 0 0 405.4 23.5 A 20.723 20.723 0 0 0 399.145 24.401 A 16.5 16.5 0 0 0 391.55 29.4 Q 386.4 35.3 385.7 44.8 Z M 142.4 74 L 138.6 74 L 117.6 21 L 121.3 21 L 140.5 69.7 L 159.8 21 L 163.5 21 L 142.4 74 Z M 3.5 74 L 0 74 L 0 0 L 24.5 0 A 30.118 30.118 0 0 1 30.119 0.496 Q 33.492 1.137 36.203 2.605 A 17.921 17.921 0 0 1 37.3 3.25 Q 42.4 6.5 45 11.65 Q 47.6 16.8 47.6 22.4 Q 47.6 28 45 33.15 Q 42.4 38.3 37.3 41.55 A 19.858 19.858 0 0 1 30.944 44.133 Q 28.358 44.717 25.364 44.79 A 35.458 35.458 0 0 1 24.5 44.8 L 3.5 44.8 L 3.5 74 Z M 24.5 3.4 L 3.5 3.4 L 3.5 41.4 L 24.5 41.4 A 26.284 26.284 0 0 0 29.134 41.014 Q 31.937 40.511 34.207 39.357 A 15.341 15.341 0 0 0 35.45 38.65 Q 39.8 35.9 41.95 31.5 Q 44.1 27.1 44.1 22.4 Q 44.1 17.6 41.95 13.25 A 17.396 17.396 0 0 0 35.753 6.346 A 20.74 20.74 0 0 0 35.45 6.15 Q 31.419 3.602 25.455 3.415 A 30.519 30.519 0 0 0 24.5 3.4 Z M 63.5 74 L 60.1 74 L 60.1 21 L 63.5 21 L 63.5 28.4 L 63.9 28.4 A 16.731 16.731 0 0 1 68.062 23.14 A 19.674 19.674 0 0 1 68.85 22.5 A 11.206 11.206 0 0 1 72.653 20.635 Q 74.183 20.199 75.995 20.062 A 22.729 22.729 0 0 1 77.7 20 A 30.068 30.068 0 0 1 79.442 20.048 Q 80.235 20.094 80.94 20.185 A 17.162 17.162 0 0 1 81.4 20.25 L 83 20.5 L 83 23.9 L 81.35 23.65 A 22.058 22.058 0 0 0 79.19 23.436 A 26.821 26.821 0 0 0 77.8 23.4 Q 75.3 23.4 72.8 24.2 A 10.236 10.236 0 0 0 69.569 25.948 A 13.203 13.203 0 0 0 68.2 27.2 Q 66.471 29.011 65.285 32.042 A 24.484 24.484 0 0 0 64.8 33.4 A 22.931 22.931 0 0 0 64.014 36.7 Q 63.5 39.775 63.5 43.8 L 63.5 74 Z M 305.9 74 L 302.5 74 L 302.5 21 L 305.9 21 L 305.9 28.4 L 306.3 28.4 A 16.731 16.731 0 0 1 310.462 23.14 A 19.674 19.674 0 0 1 311.25 22.5 A 11.206 11.206 0 0 1 315.053 20.635 Q 316.583 20.199 318.395 20.062 A 22.729 22.729 0 0 1 320.1 20 A 30.068 30.068 0 0 1 321.842 20.048 Q 322.635 20.094 323.34 20.185 A 17.162 17.162 0 0 1 323.8 20.25 L 325.4 20.5 L 325.4 23.9 L 323.75 23.65 A 22.058 22.058 0 0 0 321.59 23.436 A 26.821 26.821 0 0 0 320.2 23.4 Q 317.7 23.4 315.2 24.2 A 10.236 10.236 0 0 0 311.969 25.948 A 13.203 13.203 0 0 0 310.6 27.2 Q 308.871 29.011 307.685 32.042 A 24.484 24.484 0 0 0 307.2 33.4 A 22.931 22.931 0 0 0 306.414 36.7 Q 305.9 39.775 305.9 43.8 L 305.9 74 Z M 103 74 L 99.6 74 L 99.6 21 L 103 21 L 103 74 Z M 101.2 10.5 Q 99.7 10.5 98.7 9.45 Q 97.7 8.4 97.7 6.9 Q 97.7 5.4 98.7 4.35 Q 99.7 3.3 101.2 3.3 Q 102.7 3.3 103.75 4.35 A 3.467 3.467 0 0 1 104.8 6.854 A 4.255 4.255 0 0 1 104.8 6.9 Q 104.8 8.4 103.75 9.45 A 3.467 3.467 0 0 1 101.247 10.5 A 4.255 4.255 0 0 1 101.2 10.5 Z" vector-effect="non-scaling-stroke"/>
            </g>
        </svg>
    </div>
);

const Navbar: FC = () => {
    const router = useRouter();
    const pathname = usePathname();
    const { isCollapsed, setIsCollapsed } = useNavbar();
    // const canvasRef = useRef<HTMLCanvasElement>(null);
    const [expandedCategories, setExpandedCategories] = useState<string[]>([]);
    const { logout, isAdmin } = useAuth();

    const handleLogout = () => {
        logout();
        router.push('/login');
    };

    const items = [
        { label:  'Summary', route: '/summary', onClick: () => router.push('/summary')},
        { label:  'Patients', route: '/patients', onClick: () => router.push('/patients')},
        // { label: '', route: '#', onClick: () => console.log('病例匯入 clicked') },
        ...(isAdmin() ? [{ 
            label: 'Management', 
            route: '#',
            subItems: [
                { label: 'Manage Users', route: '/users', onClick: () => router.push('/users') },
                { label: 'Model Settings', route: '/admin', onClick: () => router.push('/admin') },
                // { label: '登入紀錄', route: '/admin/login-history', onClick: () => router.push('/admin/login-history') }
            ]
        }] : []),
    ];

    const items_bottom = [
        // { label: 'Home', route: '/', onClick: () => router.push('/'), color: 'gray' },
        { 
            label: 'Logout', 
            route: '#', 
            onClick: handleLogout, 
            color: 'red' 
        },
    ];

    const toggleNavbar = () => {
        setIsCollapsed(!isCollapsed);
    };

    const toggleCategory = (category: string) => {
        setExpandedCategories(prev => 
            prev.includes(category) 
                ? prev.filter(c => c !== category)
                : [...prev, category]
        );
    };

    return (
        <div className={`
            flex 
            flex-col 
            bg-white 
            bg-opacity-100    // 確保完全不透明
            ${isCollapsed ? 'w-16' : 'w-60'} 
            p-4 
            shadow-lg 
            transition-all 
            duration-300 
            relative 
            h-full
        `}>
            <div className="absolute left-3 top-3 z-10">
                <IconButton
                    icon={isCollapsed ? <HamburgerIcon /> : <CloseIcon />}
                    onClick={toggleNavbar}
                    aria-label="Toggle Navbar"
                    size="md"
                    variant="ghost"
                />
            </div>
            
            <div className={`mt-16 flex flex-col h-full ${isCollapsed ? 'items-center' : ''}`}>
                <div className={isCollapsed ? 'hidden' : 'block'}>
                    {/* <canvas
                        ref={canvasRef}
                        className="my-2 select-none pointer-events-none"
                        style={{
                            width: '100%',
                            height: 'auto',
                            maxWidth: '500px',
                            maxHeight: '300px'
                        }}
                    /> */}
                    {nullbot_branding}
                   

                    {items.map((item, index) => (
                        <div key={index}>
                            <Button
                                colorScheme={pathname === item.route ? 'blue' : 'gray'}
                                width='full'
                                marginY='10px'
                                onClick={item.onClick ? item.onClick : () => toggleCategory(item.label)}
                                justifyContent="space-between"
                            >
                                {item.label}
                                {item.subItems && (
                                    <ChevronDownIcon
                                        transform={expandedCategories.includes(item.label) ? 'rotate(180deg)' : ''}
                                        transition="transform 0.2s"
                                    />
                                )}
                            </Button>
                            {item.subItems && expandedCategories.includes(item.label) && (
                                <div className="ml-4">
                                    {item.subItems.map((subItem, subIndex) => (
                                        <Button
                                            key={subIndex}
                                            colorScheme={pathname === subItem.route ? 'blue' : 'gray'}
                                            width='full'
                                            marginY='5px'
                                            onClick={subItem.onClick}
                                            size="sm"
                                        >
                                            {subItem.label}
                                        </Button>
                                    ))}
                                </div>
                            )}
                        </div>
                    ))}
                </div>

                {/* Spacer */}
                <div className="flex-grow"></div>

                <div className={isCollapsed ? 'hidden' : 'block w-full'}>
                    {items_bottom.map((item, index) => (
                        <Button
                            key={index}
                            colorScheme={item.color}
                            width='full'
                            marginY='10px'
                            onClick={item.onClick}
                        >
                            {item.label}
                        </Button>
                    ))}
                </div>
            </div>
        </div>
    );
};

export default Navbar;
